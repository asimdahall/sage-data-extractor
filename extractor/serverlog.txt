
> extractor@1.0.0 start C:\workspace\sage-data-extractor\extractor
> node dist/index.js

this is carrierextract map { travelers: [Function],
  geico: [Function],
  progressive: [Function],
  nextgenleads: [Function] }
App successfully started at port 8000
OPTIONS /extract/data 204 0 - 2.587 ms
browser launching
browser undefined
{ email: 'sd', password: 'd' }
reponse received.
POST /extract/data - - - - ms
browser launching
browser Browser {
  _events:
   [Object: null prototype] {
     targetcreated:
      [ [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated],
        [AsyncFunction: bound _onTargetCreated] ] },
  _eventsCount: 1,
  _maxListeners: 30,
  _ignoreHTTPSErrors: false,
  _defaultViewport: null,
  _process:
   ChildProcess {
     _events: [Object: null prototype] {},
     _eventsCount: 0,
     _maxListeners: undefined,
     _closesNeeded: 3,
     _closesGot: 3,
     connected: false,
     signalCode: null,
     exitCode: 1,
     killed: false,
     spawnfile:
      'C:\\workspace\\sage-data-extractor\\extractor\\node_modules\\puppeteer\\.local-chromium\\win64-722234\\chrome-win\\chrome.exe',
     _handle: null,
     spawnargs:
      [ 'C:\\workspace\\sage-data-extractor\\extractor\\node_modules\\puppeteer\\.local-chromium\\win64-722234\\chrome-win\\chrome.exe',
        '--disable-background-networking',
        '--enable-features=NetworkService,NetworkServiceInProcess',
        '--disable-background-timer-throttling',
        '--disable-backgrounding-occluded-windows',
        '--disable-breakpad',
        '--disable-client-side-phishing-detection',
        '--disable-component-extensions-with-background-pages',
        '--disable-default-apps',
        '--disable-dev-shm-usage',
        '--disable-extensions',
        '--disable-features=TranslateUI',
        '--disable-hang-monitor',
        '--disable-ipc-flooding-protection',
        '--disable-popup-blocking',
        '--disable-prompt-on-repost',
        '--disable-renderer-backgrounding',
        '--disable-sync',
        '--force-color-profile=srgb',
        '--metrics-recording-only',
        '--no-first-run',
        '--enable-automation',
        '--password-store=basic',
        '--use-mock-keychain',
        'about:blank',
        '--remote-debugging-port=0',
        '--user-data-dir=C:\\Users\\Fuchu\\AppData\\Local\\Temp\\puppeteer_dev_chrome_profile-JjwhM7' ],
     pid: 26464,
     stdin:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        [Symbol(asyncId)]: 32,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     stdout:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        write: [Function: writeAfterFIN],
        [Symbol(asyncId)]: 33,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     stderr:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        write: [Function: writeAfterFIN],
        [Symbol(asyncId)]: 34,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 100,
        [Symbol(kBytesWritten)]: 0 },
     stdio: [ [Socket], [Socket], [Socket] ] },
  _screenshotTaskQueue: TaskQueue { _chain: Promise { undefined } },
  _connection:
   Connection {
     _events:
      [Object: null prototype] {
        'Target.targetCreated': [AsyncFunction: bound _targetCreated],
        'Target.targetDestroyed': [AsyncFunction: bound _targetDestroyed],
        'Target.targetInfoChanged': [Function: bound _targetInfoChanged],
        [Symbol(Events.Connection.Disconnected)]: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _url:
      'ws://127.0.0.1:49210/devtools/browser/b27fac6f-5e38-4f9e-9f2e-f651757af804',
     _lastId: 103,
     _callbacks: Map {},
     _delay: 0,
     _transport:
      WebSocketTransport { _ws: [WebSocket], onmessage: null, onclose: null },
     _sessions: Map {},
     _closed: true },
  _closeCallback: [Function: bound close],
  _defaultContext:
   BrowserContext {
     _events: [Object: null prototype] {},
     _eventsCount: 0,
     _maxListeners: undefined,
     _connection:
      Connection {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _url:
         'ws://127.0.0.1:49210/devtools/browser/b27fac6f-5e38-4f9e-9f2e-f651757af804',
        _lastId: 103,
        _callbacks: Map {},
        _delay: 0,
        _transport: [WebSocketTransport],
        _sessions: Map {},
        _closed: true },
     _browser: [Circular],
     _id: null },
  _contexts: Map {},
  _targets:
   Map {
     '030b4c9a-b6e9-4f88-a84e-57e3466565a7' => Target {
       _targetInfo: [Object],
       _browserContext: [BrowserContext],
       _targetId: '030b4c9a-b6e9-4f88-a84e-57e3466565a7',
       _sessionFactory: [Function],
       _ignoreHTTPSErrors: false,
       _defaultViewport: null,
       _screenshotTaskQueue: [TaskQueue],
       _pagePromise: null,
       _workerPromise: null,
       _initializedCallback: [Function],
       _initializedPromise: [Promise],
       _closedCallback: [Function],
       _isClosedPromise: [Promise],
       _isInitialized: true },
     'C6C0658AA9500EB7E3635CEF897DE663' => Target {
       _targetInfo: [Object],
       _browserContext: [BrowserContext],
       _targetId: 'C6C0658AA9500EB7E3635CEF897DE663',
       _sessionFactory: [Function],
       _ignoreHTTPSErrors: false,
       _defaultViewport: null,
       _screenshotTaskQueue: [TaskQueue],
       _pagePromise: null,
       _workerPromise: null,
       _initializedCallback: [Function],
       _initializedPromise: [Promise],
       _closedCallback: [Function],
       _isClosedPromise: [Promise],
       _isInitialized: true },
     '64141B3F9158022B3299B0DF86F9C9EC' => Target {
       _targetInfo: [Object],
       _browserContext: [BrowserContext],
       _targetId: '64141B3F9158022B3299B0DF86F9C9EC',
       _sessionFactory: [Function],
       _ignoreHTTPSErrors: false,
       _defaultViewport: null,
       _screenshotTaskQueue: [TaskQueue],
       _pagePromise: [Promise],
       _workerPromise: null,
       _initializedCallback: [Function],
       _initializedPromise: [Promise],
       _closedCallback: [Function],
       _isClosedPromise: [Promise],
       _isInitialized: true } },
  _createPageInContext: [AsyncFunction] }
{ email: 'sd', password: 'd' }
reponse received.
POST /extract/data - - - - ms
Terminate batch job (Y/N)? 
